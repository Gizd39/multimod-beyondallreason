mini squashed singletweak version:
!bSet tweakdefs bG9jYWwgTW9kRGVmcyA9IHsKWyJiaWdfYmxpbmQiXSA9IHsgCndlaWdodCA9IDUwLAptb2R0eXBlID0gIm1pc2MiLAppZCA9IDAsCmFmZmluaXR5ID0gewpbInNtb2xfYmxpbmQiXSA9IDAsClsiYnVpbGRfb25seSJdID0gMC4yNSwKWyJkZWF0aHNwbG9kZSJdID0gMC4yNSwKWyJtaW5pbWFzcyJdID0gMC4yNSwKWyJib3VuY2V3b3JsZCJdID0gMCwKWyJnbXB3b3JsZCJdID0gMiwKfSwKfSwKWyJzbW9sX2JsaW5kIl0gPSB7IAp3ZWlnaHQgPSA1MCwKbW9kdHlwZSA9ICJtaXNjIiwKaWQgPSAxLAphZmZpbml0eSA9IHsKWyJiaWdfYmxpbmQiXSA9IDAsClsiYnVpbGRfb25seSJdID0gMC4yNSwKWyJkZWF0aHNwbG9kZSJdID0gMC4yNSwKWyJtaW5pbWFzcyJdID0gMC4yNSwKWyJib3VuY2V3b3JsZCJdID0gMCwKWyJnbXB3b3JsZCJdID0gMiwKfSwKfSwJClsiaHByZWdlbiJdID0geyAKd2VpZ2h0ID0gMTAwLAptb2R0eXBlID0gIm1pc2MiLAppZCA9IDIsCmFmZmluaXR5ID0gewpbImhpZ2hsYW5kZXIiXSA9IDIsCn0sCn0sClsidDFfb25seSJdID0geyAKd2VpZ2h0ID0gMTAwLAptb2R0eXBlID0gImJhc2UiLAppZCA9IDUsCmFmZmluaXR5ID0gewpbImJ1aWxkX29ubHkiXSA9IDAuMjUsClsiaGlnaGxhbmRlciJdID0gMCwKfSwKfSwKWyJidWlsZF9vbmx5Il0gPSB7IAp3ZWlnaHQgPSA1MCwKbW9kdHlwZSA9ICJiYXNlIiwKaWQgPSA2LAphZmZpbml0eSA9IHsKWyJiaWdfYmxpbmQiXSA9IDAuMjUsClsic21vbF9ibGluZCJdID0gMC4yNSwKWyJ0MV9vbmx5Il0gPSAwLjI1LApbImNyYXRlcmFnZSJdID0gMCwKWyJkZWF0aHNwbG9kZSJdID0gMiwKWyJtaW5pbWFzcyJdID0gMCwKWyJib3VuY2V3b3JsZCJdID0gMC4yNSwKWyJnbXB3b3JsZCJdID0gMC4xLApbImhpZ2hsYW5kZXIiXSA9IDAsCn0sCn0sClsiYWxsc2hpZWxkIl0gPSB7IAp3ZWlnaHQgPSAxMDAsCm1vZHR5cGUgPSAibWlzYyIsCmlkID0gOCwKYWZmaW5pdHkgPSB7ClsibWluaW1hc3MiXSA9IDAuMjUsClsiaGlnaGxhbmRlciJdID0gMiwKfSwKfSwKWyJoaWdobGFuZGVyIl0gPSB7IAp3ZWlnaHQgPSAxMDAsCm1vZHR5cGUgPSAibWlzYyIsCmlkID0gOSwKYWZmaW5pdHkgPSB7ClsiaHByZWdlbiJdID0gMiwKWyJ0MV9vbmx5Il0gPSAwLApbImJ1aWxkX29ubHkiXSA9IDAsClsiYWxsc2hpZWxkIl0gPSAyLApbImNyYXRlcmFnZSJdID0gMiwKWyJqdW5rc2NhcGUiXSA9IDIsClsiZGVhdGhzcGxvZGUiXSA9IDIsCn0sCn0sClsiY3JhdGVyYWdlIl0gPSB7IAp3ZWlnaHQgPSAxMDAsCm1vZHR5cGUgPSAibWlzYyIsCmlkID0gMTEsCmFmZmluaXR5ID0gewpbImJ1aWxkX29ubHkiXSA9IDAsClsibWluaW1hc3MiXSA9IDIsClsiYm91bmNld29ybGQiXSA9IDIsClsiZ21wd29ybGQiXSA9IDIsClsiaGlnaGxhbmRlciJdID0gMiwKfSwKfSwKWyJqdW5rc2NhcGUiXSA9IHsgCndlaWdodCA9IDEwMCwKbW9kdHlwZSA9ICJtaXNjIiwKaWQgPSAxMiwKYWZmaW5pdHkgPSB7ClsiYWxsc2hpZWxkIl0gPSAyLApbImRlYXRoc3Bsb2RlIl0gPSAwLApbIm1pbmltYXNzIl0gPSAyLApbImJvdW5jZXdvcmxkIl0gPSAyLApbImhpZ2hsYW5kZXIiXSA9IDIsCn0sCn0sClsiZGVhdGhzcGxvZGUiXSA9IHsgCndlaWdodCA9IDEwMCwKbW9kdHlwZSA9ICJtaXNjIiwKaWQgPSAxMywKYWZmaW5pdHkgPSB7ClsiYmlnX2JsaW5kIl0gPSAwLjI1LApbInNtb2xfYmxpbmQiXSA9IDAuMjUsClsiYWxsc2hpZWxkIl0gPSAyLApbImp1bmtzY2FwZSJdID0gMCwKWyJtaW5pbWFzcyJdID0gMC4yNSwKWyJib3VuY2V3b3JsZCJdID0gMC4yNSwKWyJoaWdobGFuZGVyIl0gPSAyLAp9LAp9LApbIm1pbmltYXNzIl0gPSB7IAp3ZWlnaHQgPSAxMDAsCm1vZHR5cGUgPSAid2VhcCIsCmlkID0gMTcsCmFmZmluaXR5ID0gewpbImhwcmVnZW4iXSA9IDIsClsiYnVpbGRfb25seSJdID0gMCwKWyJhbGxzaGllbGQiXSA9IDAuMjUsClsiY3JhdGVyYWdlIl0gPSAyLApbImp1bmtzY2FwZSJdID0gMiwKWyJnbXB3b3JsZCJdID0gMC4yNSwKfSwKfSwKWyJib3VuY2V3b3JsZCJdID0geyAKd2VpZ2h0ID0gMTAwLAptb2R0eXBlID0gIndlYXAiLAppZCA9IDE4LAphZmZpbml0eSA9IHsKWyJocHJlZ2VuIl0gPSAyLApbImJ1aWxkX29ubHkiXSA9IDAuMjUsClsiY3JhdGVyYWdlIl0gPSAyLApbImp1bmtzY2FwZSJdID0gMiwKWyJkZWF0aHNwbG9kZSJdID0gMC4yNSwKfSwKfSwKWyJnbXB3b3JsZCJdID0gewp3ZWlnaHQgPSAxMDAsCm1vZHR5cGUgPSAid2VhcCIsCmlkID0gMjAsCmFmZmluaXR5ID0gewpbImJpZ19ibGluZCJdID0gMywKWyJzbW9sX2JsaW5kIl0gPSAzLApbImhwcmVnZW4iXSA9IDAuNSwKWyJidWlsZF9vbmx5Il0gPSAwLjEsClsiY3JhdGVyYWdlIl0gPSAzLApbIm1pbmltYXNzIl0gPSAwLjI1LAp9LAp9LApbInZhbmlsbGEiXSA9IHsKd2VpZ2h0ID0gMCwKbW9kdHlwZSA9ICJub25lIiwKaWQgPSA2NjYsCmFmZmluaXR5ID0gewp9LAp9LAp9CmZ1bmN0aW9uIHBpY2tfd2VpZ2h0ZWRfdmFsdWUocm9sbCkKZm9yIG5hbWUsbWQgaW4gcGFpcnMoTW9kRGVmcykgZG8KaWYgcm9sbCA-IG1kLndlaWdodCB0aGVuCnJvbGwgPSByb2xsIC0gbWQud2VpZ2h0CmVsc2UKcmV0dXJuIG5hbWUKZW5kCmVuZApyZXR1cm4gInZhbmlsbGEiCmVuZApmdW5jdGlvbiByb2xsX2FfbW9kKHJpZ2dlZE5hbWUpCmxvY2FsIHJvbGxlZF9tb2QgPSAidmFuaWxsYSIKaWYgbm90IHJpZ2dlZE5hbWUgdGhlbgpsb2NhbCBybmdfd2VpZ2h0X3RvdGFsID0gMApmb3IgbmFtZSxtZCBpbiBwYWlycyhNb2REZWZzKSBkbyAKcm5nX3dlaWdodF90b3RhbCA9IHJuZ193ZWlnaHRfdG90YWwgKyBtZC53ZWlnaHQKZW5kCnJvbGxlZF9tb2QgPSBwaWNrX3dlaWdodGVkX3ZhbHVlKCBtYXRoLnJhbmRvbShybmdfd2VpZ2h0X3RvdGFsKSApCmVsc2UKcm9sbGVkX21vZCA9IHJpZ2dlZE5hbWUKZW5kCk1vZERlZnNbcm9sbGVkX21vZF0uYWN0aXZlID0gdHJ1ZQpNb2REZWZzW3JvbGxlZF9tb2RdLndlaWdodCA9IDAKZm9yIGFuYW1lLGFmZiBpbiBwYWlycyhNb2REZWZzW3JvbGxlZF9tb2RdLmFmZmluaXR5KSBkbwpNb2REZWZzW2FuYW1lXS53ZWlnaHQgPSBNb2REZWZzW2FuYW1lXS53ZWlnaHQgKiBhZmYKZW5kCnJldHVybiByb2xsZWRfbW9kCmVuZApmb3IgbW5hbWUsbWQgaW4gcGFpcnMoTW9kRGVmcykgZG8KbWQuYWN0aXZlID0gZmFsc2UKZW5kCgpyb2xsX2FfbW9kKGZhbHNlKQpyb2xsX2FfbW9kKGZhbHNlKQpyb2xsX2FfbW9kKGZhbHNlKQoKaWYgTW9kRGVmc1siYWxsc2hpZWxkIl0uYWN0aXZlIHRoZW4KZm9yIG5hbWUsIHVkIGluIHBhaXJzKFVuaXREZWZzKSBkbwkKbG9jYWwgbW9kc2hpZWxkaHAgPSAwCmxvY2FsIG1vZHNoaWVsZHJhZGl1cyA9IDgwCmlmIHVkLmhlYWx0aCB0aGVuCm1vZHNoaWVsZGhwID0gdWQuaGVhbHRoCmVuZAppZiB1ZC5jb2xsaXNpb252b2x1bWVzY2FsZXMgdGhlbgptb2RzaGllbGRyYWRpdXMgPSB0b251bWJlciggc3RyaW5nLm1hdGNoKHVkLmNvbGxpc2lvbnZvbHVtZXNjYWxlcywiJWQrIikgKSArIDIwCmlmIG1vZHNoaWVsZHJhZGl1cyA-IDIwMCB0aGVuIG1vZHNoaWVsZHJhZGl1cyA9IDIwMCBlbmQKaWYgbW9kc2hpZWxkcmFkaXVzIDwgODAgdGhlbiBtb2RzaGllbGRyYWRpdXMgPSA4MCBlbmQKZW5kCmlmIGlzUmVwdWxzZSB0aGVuCm1vZHNoaWVsZHJhZGl1cyA9IG1vZHNoaWVsZHJhZGl1cyArIDMwCmVuZAppZiBtb2RzaGllbGRocCA-IDAgdGhlbgpsb2NhbCBtb2RzaGllbGRkZWYgPSB7Cm5hbWUgPSAiUGxhc21hUmVwdWxzb3IiLApyYW5nZSA9IG1vZHNoaWVsZHJhZGl1cywKc291bmRoaXR3ZXQgPSAic2l6emxlIiwKd2VhcG9udHlwZSA9ICJTaGllbGQiLApkYW1hZ2UgPSB7CmRlZmF1bHQgPSAxMDAsCn0sCnNoaWVsZCA9IHsKYWxwaGEgPSAwLAphcm1vcnR5cGUgPSAic2hpZWxkcyIsCmVuZXJneXVwa2VlcCA9IDAsCmZvcmNlID0gMjUsCmludGVyY2VwdHR5cGUgPSA1MTEsCnBvd2VyID0gbW9kc2hpZWxkaHAsCnBvd2VycmVnZW4gPSBtb2RzaGllbGRocC8xMCwKcG93ZXJyZWdlbmVuZXJneSA9IG1vZHNoaWVsZGhwLApyYWRpdXMgPSBtb2RzaGllbGRyYWRpdXMsCnJlcHVsc2VyID0gaXNSZXB1bHNlLApzbWFydCA9IHRydWUsCnZpc2libGUgPSBmYWxzZSwKc3RhcnRpbmdwb3dlciA9IG1vZHNoaWVsZGhwLAp2aXNpYmxlcmVwdWxzZSA9IHRydWUsCmJhZGNvbG9yID0gewoJWzFdID0gMC44LAoJWzJdID0gMC4xLAoJWzNdID0gMC44LAoJWzRdID0gMSwKfSwKZ29vZGNvbG9yID0gewoJWzFdID0gMC40LAoJWzJdID0gMC44LAoJWzNdID0gMCwKCVs0XSA9IDEsCn0sCn0sCn0KaWYgdWQud2VhcG9uZGVmcyB0aGVuCnVkLndlYXBvbmRlZnMubW9kc2hpZWxkID0gdGFibGUuY29weShtb2RzaGllbGRkZWYpCmVsc2UKdWQud2VhcG9uZGVmcyA9IHsgbW9kc2hpZWxkID0gdGFibGUuY29weShtb2RzaGllbGRkZWYpIH0KZW5kCmlmIHVkLndlYXBvbnMgdGhlbgp0YWJsZS5pbnNlcnQodWQud2VhcG9ucywgeyBkZWYgPSAiTU9EU0hJRUxEIiB9ICkKZWxzZQp1ZC53ZWFwb25zID0geyBbMV0gPSB7IGRlZiA9ICJNT0RTSElFTEQiIH0gfQplbmQKZW5kCmVuZAplbmQKaWYgTW9kRGVmc1siaGlnaGxhbmRlciJdLmFjdGl2ZSB0aGVuCmxvY2FsIHRhcmdldCA9IHsKaGVhbHRoID0gMzAwMCwKaGVhbHRoX3Nsb3BlID0gMC42NiwKYnVpbGR0aW1lID0gMTAwMDAsCmJ1aWxkdGltZV9zbG9wZSA9IDAuNjYsCndvcmtlcnRpbWUgPSA1MDAsCndvcmtlcnRpbWVfc2xvcGUgPSAwLjY2LAp9CmZvciBuYW1lLCB1ZCBpbiBwYWlycyhVbml0RGVmcykgZG8KaWYgdWQuY2FubW92ZSBhbmQgdWQuc3BlZWQgdGhlbgp1ZC5tYXh0aGlzdW5pdCA9IDEKCmlmIHVkLmhlYWx0aCB0aGVuCnVkLmhlYWx0aCA9IHVkLmhlYWx0aCAqIHRhcmdldC5oZWFsdGhfc2xvcGUgKyB0YXJnZXQuaGVhbHRoICogKDEgLSB0YXJnZXQuaGVhbHRoX3Nsb3BlKQp1ZC5oZWFsdGggPSBtYXRoLmZsb29yKHVkLmhlYWx0aCkgKyAxCmVuZApsb2NhbCBiYWxhbmNlX3JhdGlvID0gMQppZiB1ZC5idWlsZHRpbWUgdGhlbgpiYWxhbmNlX3JhdGlvID0gdWQuYnVpbGR0aW1lCnVkLmJ1aWxkdGltZSA9IHVkLmJ1aWxkdGltZSAqIHRhcmdldC5idWlsZHRpbWVfc2xvcGUgKyB0YXJnZXQuYnVpbGR0aW1lICogKDEgLSB0YXJnZXQuYnVpbGR0aW1lX3Nsb3BlKQp1ZC5idWlsZHRpbWUgPSBtYXRoLmZsb29yKHVkLmJ1aWxkdGltZSkgKyAxCmJhbGFuY2VfcmF0aW8gPSAodWQuYnVpbGR0aW1lIC8gYmFsYW5jZV9yYXRpbyleMC40CmVuZAppZiB1ZC53b3JrZXJ0aW1lIHRoZW4KdWQud29ya2VydGltZSA9IHVkLndvcmtlcnRpbWUgKiB0YXJnZXQud29ya2VydGltZV9zbG9wZSArIHRhcmdldC53b3JrZXJ0aW1lICogKDEgLSB0YXJnZXQud29ya2VydGltZV9zbG9wZSkKdWQud29ya2VydGltZSA9IG1hdGguZmxvb3IodWQud29ya2VydGltZSkgKyAxCmVuZAppZiB1ZC53ZWFwb25kZWZzIHRoZW4gCmZvciB3bmFtZSx3dWQgaW4gcGFpcnModWQud2VhcG9uZGVmcykgZG8KaWYgd3VkLmRhbWFnZSB0aGVuCmZvciBkbmFtZSxkdWQgaW4gcGFpcnMod3VkLmRhbWFnZSkgZG8Kd3VkLmRhbWFnZVtkbmFtZV0gPSBtYXRoLmZsb29yKGR1ZCAqIGJhbGFuY2VfcmF0aW8pCmVuZAplbmQKZW5kCmVuZAppZiB1ZC5mZWF0dXJlZGVmcyB0aGVuCmZvciBmbmFtZSwgZnVkIGluIHBhaXJzKHVkLmZlYXR1cmVkZWZzKSBkbwpmdWQucmVzdXJyZWN0YWJsZSA9IDAKZW5kCmVuZAppZiB1ZC5jYXRlZ29yeSB0aGVuCmlmIHN0cmluZy5tYXRjaCh1ZC5jYXRlZ29yeSwgIkFMTCIpIHRoZW4KdWQucG93ZXIgPSAxMDAKZW5kCmVuZAplbmQKZW5kCmVuZAppZiBNb2REZWZzWyJ0MV9vbmx5Il0uYWN0aXZlIHRoZW4KbG9jYWwgdW5pdHNfdG9fcmVtb3ZlID0geyAgICAgICAKImFybWZocCIsCiJhcm1ocCIsCiJhcm1wbGF0IiwKImFybWFsYWIiLAoiYXJtYXZwIiwKImFybWFhcCIsCiJhcm1hc3kiLAoiYXJtYW1zdWIiLAoiYXJtc2hsdHgiLAoiYXJtc2hsdHh1dyIsCiJhcm1hcHQzIiwKImNvcmZocCIsCiJjb3JocCIsCiJjb3JwbGF0IiwKImNvcmFsYWIiLAoiY29yYXZwIiwKImNvcmFhcCIsCiJjb3Jhc3kiLAoiY29yYW1zdWIiLAoiY29yc2hsdHgiLAoiY29yc2hsdHh1dyIsCiJjb3JhcHQzIiwKImxlZ2ZocCIsCiJsZWdocCIsCiJsZWdwbGF0IiwKImxlZ2FsYWIiLAoibGVnYXZwIiwKImxlZ2FhcCIsCiJsZWdhc3kiLAoibGVnYW1zdWIiLAoibGVnc2hsdHgiLAoibGVnc2hsdHh1dyIsCiJsZWdhcHQzIiwKfQpmb3IgbmFtZSwgdWQgaW4gcGFpcnMoVW5pdERlZnMpIGRvCmZvciBrLHYgaW4gcGFpcnModW5pdHNfdG9fcmVtb3ZlKSBkbwppZiBuYW1lID09IHYgdGhlbgp1ZC5tYXh0aGlzdW5pdCA9IDAKZW5kCmVuZAplbmQKZW5kCmlmIE1vZERlZnNbImJ1aWxkX29ubHkiXS5hY3RpdmUgdGhlbgpmb3IgbmFtZSwgdWQgaW4gcGFpcnMoVW5pdERlZnMpIGRvCmlmIHVkLmNhbm1vdmUgYW5kIHVkLnNwZWVkIHRoZW4KaWYgbm90IHVkLmJ1aWxkZXIgdGhlbgp1ZC5tYXh0aGlzdW5pdCA9IDAKZWxzZQp1ZC5tYXh0aGlzdW5pdCA9IDUKZW5kCmVuZAplbmQKZW5kCmlmIE1vZERlZnNbImdtcHdvcmxkIl0uYWN0aXZlIHRoZW4KZm9yIG5hbWUsIHVkIGluIHBhaXJzKFVuaXREZWZzKSBkbwppZiB1ZC53ZWFwb25kZWZzIHRoZW4KZm9yIHduYW1lLCB3dWQgaW4gcGFpcnModWQud2VhcG9uZGVmcykgZG8KbG9jYWwgd3R5cGVnb29kID0gKCAKKCB3dWQud2VhcG9udHlwZSA9PSAiTWlzc2lsZUxhdW5jaGVyIiApIG9yCiggd3VkLndlYXBvbnR5cGUgPT0gIlN0YXJidXJzdExhdW5jaGVyIiApIG9yCiggd3VkLndlYXBvbnR5cGUgPT0gIlRvcnBlZG9MYXVuY2hlciIgKSBvcgooIHd1ZC53ZWFwb250eXBlID09ICJDYW5ub24iICkgb3IKKCB3dWQud2VhcG9udHlwZSA9PSAiQmVhbUxhc2VyIiApIG9yCiggd3VkLndlYXBvbnR5cGUgPT0gIkxhc2VyQ2Fubm9uIiApIG9yCiggd3VkLndlYXBvbnR5cGUgPT0gIkRHdW4iICkgb3IKKCB3dWQud2VhcG9udHlwZSA9PSAiRmxhbWUiICkgb3IKKCB3dWQud2VhcG9udHlwZSA9PSAiQWlyY3JhZnRCb21iIiApIG9yCiggd3VkLndlYXBvbnR5cGUgPT0gIkxpZ2h0bmluZ0Nhbm5vbiIgKQopCmlmIHd0eXBlZ29vZCB0aGVuCQkKd3VkLnNwcmF5QW5nbGUgPSA3MDAwCmlmIHd1ZC5wcm9qZWN0aWxlcyB0aGVuCnd1ZC5wcm9qZWN0aWxlcyA9IHd1ZC5wcm9qZWN0aWxlcyAqIDUKZWxzZQp3dWQucHJvamVjdGlsZXMgPSA1CmVuZAppZiAoIHd1ZC53ZWFwb250eXBlID09ICJUb3JwZWRvTGF1bmNoZXIiICkgdGhlbgp3dWQud2F0ZXJXZWFwb24gPSB0cnVlCnd1ZC5maXJlU3VibWVyc2VkID0gdHJ1ZQp3dWQud2VhcG9udHlwZSA9ICJNaXNzaWxlTGF1bmNoZXIiCmVsc2VpZiAoIHd1ZC53ZWFwb250eXBlID09ICJTdGFyYnVyc3RMYXVuY2hlciIgKSB0aGVuCnd1ZC53ZWFwb250aW1lciA9IDAKd3VkLmZsaWdodHRpbWUgPSAwCnd1ZC50cmFja3MgPSBmYWxzZQp3dWQuaGlnaHRyYWplY3RvcnkgPSAxCmlmIHd1ZC5yYW5nZSB0aGVuCnd1ZC53ZWFwb25WZWxvY2l0eSA9IHd1ZC5yYW5nZQplbmQKd3VkLm15R3Jhdml0eSA9IDAuNAp3dWQud2VhcG9udHlwZSA9ICJDYW5ub24iCmVuZAppZiB3dWQudHVybnJhdGUgdGhlbgp3dWQud29iYmxlID0gd3VkLnR1cm5yYXRlICogMi4zMwplbHNlaWYgKCB3dWQud2VhcG9udHlwZSA9PSAiTWlzc2lsZUxhdW5jaGVyIiApIHRoZW4Kd3VkLndvYmJsZSA9IDgwMDAKZW5kCmlmIHd1ZC5kYW1hZ2UgdGhlbgpmb3IgZG5hbWUsZHVkIGluIHBhaXJzKHd1ZC5kYW1hZ2UpIGRvCnd1ZC5kYW1hZ2VbZG5hbWVdID0gbWF0aC5mbG9vcihkdWQgKiAwLjIpKzEKZW5kCmVuZAplbmQKZW5kCmVuZAplbmQKZW5kCmlmIE1vZERlZnNbImNyYXRlcmFnZSJdLmFjdGl2ZSB0aGVuCmZvciBuYW1lLCB1ZCBpbiBwYWlycyhVbml0RGVmcykgZG8KaWYgdWQud2VhcG9uZGVmcyB0aGVuCmZvciB3bmFtZSwgd3VkIGluIHBhaXJzKHVkLndlYXBvbmRlZnMpIGRvCmxvY2FsIHd0eXBlZ29vZCA9ICggCiggd3VkLndlYXBvbnR5cGUgPT0gIkNhbm5vbiIgKSBvcgooIHd1ZC53ZWFwb250eXBlID09ICJCZWFtTGFzZXIiICkgb3IKKCB3dWQud2VhcG9udHlwZSA9PSAiTWlzc2lsZUxhdW5jaGVyIiApIG9yCiggd3VkLndlYXBvbnR5cGUgPT0gIlN0YXJidXJzdExhdW5jaGVyIiApIG9yCiggd3VkLndlYXBvbnR5cGUgPT0gIkxhc2VyQ2Fubm9uIiApIG9yCiggd3VkLndlYXBvbnR5cGUgPT0gIlRvcnBlZG9MYXVuY2hlciIgKSBvcgooIHd1ZC53ZWFwb250eXBlID09ICJER3VuIiApIG9yCiggd3VkLndlYXBvbnR5cGUgPT0gIkZsYW1lIiApIG9yCiggd3VkLndlYXBvbnR5cGUgPT0gIm5vdEZsYW1lIiApIG9yCiggd3VkLndlYXBvbnR5cGUgPT0gIkFpcmNyYWZ0Qm9tYiIgKSBvcgooIHd1ZC53ZWFwb250eXBlID09ICJMaWdodG5pbmdDYW5ub24iICkKKQppZiB3dHlwZWdvb2QgdGhlbgkJCmlmIHd1ZC5hcmVhb2ZlZmZlY3QgdGhlbgp3dWQuY3JhdGVyYXJlYW9mZWZmZWN0ID0gd3VkLmFyZWFvZmVmZmVjdCAqIDIKZWxzZQp3dWQuY3JhdGVyYXJlYW9mZWZmZWN0ID0gMTI4CmVuZAppZiB3dWQuY3JhdGVyYXJlYW9mZWZmZWN0IDwgMjQgdGhlbiB3dWQuY3JhdGVyYXJlYW9mZWZmZWN0ID0gMjQgZW5kCnd1ZC5jcmF0ZXJib29zdCA9IDIwCnd1ZC5jcmF0ZXJtdWx0ID0gNQplbmQKZW5kCmVuZAplbmQKZW5kCmlmIE1vZERlZnNbIm1pbmltYXNzIl0uYWN0aXZlIHRoZW4KZm9yIG5hbWUsIHVkIGluIHBhaXJzKFVuaXREZWZzKSBkbwppZiB1ZC53ZWFwb25kZWZzIHRoZW4KZm9yIHduYW1lLCB3dWQgaW4gcGFpcnModWQud2VhcG9uZGVmcykgZG8KaWYgd3VkLmFyZWFvZmVmZmVjdCB0aGVuCnd1ZC5hcmVhb2ZlZmZlY3QgPSB3dWQuYXJlYW9mZWZmZWN0ICogNQp3dWQuZWRnZWVmZmVjdGl2ZW5lc3MgPSAwCnd1ZC5leHBsb3Npb25TcGVlZCA9IDIwMDAKZW5kCnd1ZC5pbnRlbnNpdHkgPSAxCnd1ZC5pbXB1bHNlYm9vc3QgPSAxCnd1ZC5pbXB1bHNlZmFjdG9yID0gNAppZiB3dWQuZGFtYWdlIHRoZW4KZm9yIGRuYW1lLGR1ZCBpbiBwYWlycyh3dWQuZGFtYWdlKSBkbwp3dWQuZGFtYWdlW2RuYW1lXSA9IG1hdGguZmxvb3IoZHVkICogMC4zMykKZW5kCmVuZAplbmQKZW5kCmlmIHVkLmNhbm1vdmUgYW5kIHVkLnNwZWVkIHRoZW4KdWQubWFzcyA9IDEKZW5kCmVuZAplbmQKaWYgTW9kRGVmc1siYm91bmNld29ybGQiXS5hY3RpdmUgdGhlbgpmb3IgbmFtZSwgdWQgaW4gcGFpcnMoVW5pdERlZnMpIGRvCmlmIHVkLndlYXBvbmRlZnMgdGhlbgkKZm9yIHduYW1lLCB3dWQgaW4gcGFpcnModWQud2VhcG9uZGVmcykgZG8KbG9jYWwgd3R5cGVnb29kID0gKCAKKCB3dWQud2VhcG9udHlwZSA9PSAiQ2Fubm9uIiApIG9yCiggd3VkLndlYXBvbnR5cGUgPT0gIkJlYW1MYXNlciIgKSBvcgooIHd1ZC53ZWFwb250eXBlID09ICJNaXNzaWxlTGF1bmNoZXIiICkgb3IKKCB3dWQud2VhcG9udHlwZSA9PSAiU3RhcmJ1cnN0TGF1bmNoZXIiICkgb3IKKCB3dWQud2VhcG9udHlwZSA9PSAiTGFzZXJDYW5ub24iICkgb3IKKCB3dWQud2VhcG9udHlwZSA9PSAiVG9ycGVkb0xhdW5jaGVyIiApIG9yCiggd3VkLndlYXBvbnR5cGUgPT0gIkZsYW1lIiApIG9yCiggd3VkLndlYXBvbnR5cGUgPT0gIkFpcmNyYWZ0Qm9tYiIgKSBvcgooIHd1ZC53ZWFwb250eXBlID09ICJMaWdodG5pbmdDYW5ub24iICkKKQppZiB3dHlwZWdvb2QgdGhlbgp3dWQuZ3JvdW5kQm91bmNlID0gdHJ1ZQppZiAoIHd1ZC53ZWFwb250eXBlIH49ICJUb3JwZWRvTGF1bmNoZXIiICkgdGhlbiB3dWQud2F0ZXJCb3VuY2UgPSB0cnVlIGVuZAp3dWQuYm91bmNlU2xpcCA9IDAuOTMKd3VkLmJvdW5jZVJlYm91bmQgPSAwLjg1Cnd1ZC5idXJuYmxvdyA9IGZhbHNlCnd1ZC5udW1Cb3VuY2UgPSAxMAplbmQKZW5kCmVuZAplbmQKZW5kCmlmIE1vZERlZnNbImJpZ19ibGluZCJdLmFjdGl2ZSB0aGVuCmZvciBuYW1lLCB1ZCBpbiBwYWlycyhVbml0RGVmcykgZG8KdWQuc2lnaHRkaXN0YW5jZSA9IDAKZW5kCmVuZAppZiBNb2REZWZzWyJzbW9sX2JsaW5kIl0uYWN0aXZlIHRoZW4KZm9yIG5hbWUsIHVkIGluIHBhaXJzKFVuaXREZWZzKSBkbwp1ZC5zaWdodGRpc3RhbmNlID0gNzAKZW5kCmVuZAppZiBNb2REZWZzWyJocHJlZ2VuIl0uYWN0aXZlIHRoZW4KZm9yIG5hbWUsIHVkIGluIHBhaXJzKFVuaXREZWZzKSBkbwpsb2NhbCBhcmVnID0gMTAwCmlmIHVkLmN1c3RvbXBhcmFtcy50ZWNobGV2ZWwgdGhlbgphcmVnID0gNTAgKiB1ZC5jdXN0b21wYXJhbXMudGVjaGxldmVsICogdWQuY3VzdG9tcGFyYW1zLnRlY2hsZXZlbAplbmQKaWYgdWQuYXV0b2hlYWwgdGhlbgp1ZC5hdXRvaGVhbCA9IGFyZWcgKiAyCmVsc2UKdWQuYXV0b2hlYWwgPSBhcmVnCmVuZAplbmQKZW5kCmlmIE1vZERlZnNbImp1bmtzY2FwZSJdLmFjdGl2ZSB0aGVuCmZvciBuYW1lLCB1ZCBpbiBwYWlycyhVbml0RGVmcykgZG8KaWYgdWQuZmVhdHVyZWRlZnMgdGhlbgpmb3IgZm5hbWUsIGZ1ZCBpbiBwYWlycyh1ZC5mZWF0dXJlZGVmcykgZG8KaWYgZnVkLmRhbWFnZSB0aGVuCmZ1ZC5kYW1hZ2UgPSBmdWQuZGFtYWdlICogMTAwCmlmIGZ1ZC5kYW1hZ2UgPCA1MDAwMCB0aGVuIGZ1ZC5kYW1hZ2UgPSA1MDAwMCBlbmQKZnVkLnJlc3VycmVjdGFibGUgPSAwCmZ1ZC5yZWNsYWltYWJsZSA9IGZhbHNlCmZ1ZC5tZXRhbCA9IDAKZW5kCmVuZAplbmQKZW5kCmVuZAppZiBNb2REZWZzWyJkZWF0aHNwbG9kZSJdLmFjdGl2ZSB0aGVuCmZvciBuYW1lLCB1ZCBpbiBwYWlycyhVbml0RGVmcykgZG8KaWYgdWQuY29ycHNlID09ICJERUFEIiB0aGVuCnVkLmNvcnBzZSA9ICJIRUFQIgplbmQKaWYgdWQuZXhwbG9kZWFzIHRoZW4KaWYgdWQuaGVhbHRoIHRoZW4KaWYgKHVkLmhlYWx0aCA8IDUwMCkgdGhlbgp1ZC5leHBsb2RlYXMgPSAibWV0YWxtYWtlclNlbGZkIgp1ZC5zZWxmZGVzdHJ1Y3RhcyA9ICJtZXRhbG1ha2VyU2VsZmQiCmVsc2VpZiAodWQuaGVhbHRoIDwgMTUwMCkgdGhlbgp1ZC5leHBsb2RlYXMgPSAiYWR2bWV0YWxtYWtlclNlbGZkIgp1ZC5zZWxmZGVzdHJ1Y3RhcyA9ICJhZHZtZXRhbG1ha2VyU2VsZmQiCmVsc2VpZiAodWQuaGVhbHRoIDwgMzAwMCkgdGhlbgp1ZC5leHBsb2RlYXMgPSAiZW5lcmd5c3RvcmFnZVNlbGZkLXV3Igp1ZC5zZWxmZGVzdHJ1Y3RhcyA9ICJlbmVyZ3lzdG9yYWdlU2VsZmQtdXciCmVsc2VpZiAodWQuaGVhbHRoIDwgNjAwMCkgdGhlbgp1ZC5leHBsb2RlYXMgPSAiYWR2ZW5lcmd5c3RvcmFnZVNlbGZkIgp1ZC5zZWxmZGVzdHJ1Y3RhcyA9ICJhZHZlbmVyZ3lzdG9yYWdlU2VsZmQiCmVsc2VpZiAodWQuaGVhbHRoIDwgMTIwMDApIHRoZW4KdWQuZXhwbG9kZWFzID0gImFkdmdlbyIKdWQuc2VsZmRlc3RydWN0YXMgPSAiYWR2Z2VvIgplbHNlaWYgKHVkLmhlYWx0aCA8IDI0MDAwKSB0aGVuCnVkLmV4cGxvZGVhcyA9ICJhZHZhbmNlZEZ1c2lvbkV4cGxvc2lvblNlbGZkIgp1ZC5zZWxmZGVzdHJ1Y3RhcyA9ICJhZHZhbmNlZEZ1c2lvbkV4cGxvc2lvblNlbGZkIgplbHNlCnVkLmV4cGxvZGVhcyA9ICJTY2F2Q29tQm9zc0V4cGxvIgp1ZC5zZWxmZGVzdHJ1Y3RhcyA9ICJTY2F2Q29tQm9zc0V4cGxvIgplbmQKZW5kCmVuZAplbmQKZW5kCg


!bSet tweakdefs 
!bSet tweakdefs1 
!bSet tweakdefs2 
!bSet tweakdefs3 
!bSet tweakdefs4 ZnVuY3Rpb24gcGlja193ZWlnaHRlZF92YWx1ZShyb2xsKSAtLXBpY2tzIG1vZCBmcm9tIGxpc3QgYmFzZWQgb24gcm9sbAoJZm9yIG5hbWUsbWQgaW4gcGFpcnMoTW9kRGVmcykgZG8KCQlpZiByb2xsID4gbWQud2VpZ2h0IHRoZW4KCQkJcm9sbCA9IHJvbGwgLSBtZC53ZWlnaHQKCQllbHNlCgkJCXJldHVybiBuYW1lCgkJZW5kCgllbmQKCXJldHVybiAidmFuaWxsYSIKZW5kCgpmdW5jdGlvbiByb2xsX2FfbW9kKHJpZ2dlZE5hbWUpCglsb2NhbCByb2xsZWRfbW9kID0gInZhbmlsbGEiCglpZiBub3QgcmlnZ2VkTmFtZSB0aGVuCgkJbG9jYWwgcm5nX3dlaWdodF90b3RhbCA9IDAKCQlmb3IgbmFtZSxtZCBpbiBwYWlycyhNb2REZWZzKSBkbyAKCQkJcm5nX3dlaWdodF90b3RhbCA9IHJuZ193ZWlnaHRfdG90YWwgKyBtZC53ZWlnaHQKCQllbmQKCQlpZiBybmdfd2VpZ2h0X3RvdGFsID4gMCB0aGVuCgkJCXJvbGxlZF9tb2QgPSBwaWNrX3dlaWdodGVkX3ZhbHVlKCBtYXRoLnJhbmRvbShybmdfd2VpZ2h0X3RvdGFsKSApIC0tcGljayBhIG1vZAoJCWVuZAoJZWxzZQoJCXJvbGxlZF9tb2QgPSByaWdnZWROYW1lCgllbmQKCQoJaWYgcm9sbGVkX21vZCB-PSAidmFuaWxsYSIgdGhlbgoJCU1vZERlZnNbcm9sbGVkX21vZF0uYWN0aXZlID0gdHJ1ZQoJCU1vZERlZnNbcm9sbGVkX21vZF0ud2VpZ2h0ID0gMCAtLXJlbW92ZSB0aGUgbW9kIGZyb20gcG9vbAoJCWZvciBhbmFtZSxhZmYgaW4gcGFpcnMoTW9kRGVmc1tyb2xsZWRfbW9kXS5hZmZpbml0eSkgZG8gLS1hcHBseSBhZmZpbml0aWVzCgkJCU1vZERlZnNbYW5hbWVdLndlaWdodCA9IE1vZERlZnNbYW5hbWVdLndlaWdodCAqIGFmZgoJCWVuZAoJZW5kCgkKCXJldHVybiByb2xsZWRfbW9kCmVuZAoKZm9yIG1uYW1lLG1kIGluIHBhaXJzKE1vZERlZnMpIGRvCgltZC5hY3RpdmUgPSBmYWxzZQplbmQKCi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSBUSElOR0RPSU5HIC0gVVNFUiBQQVJUIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KCS0tcGlja2luZyBzcGVjaWZpYyBtb2RzIGlnbm9yZXMgd2VpZ2h0cyBzbyBpdCBjYW4gZm9yY2UgImJhZCIgY29tYm9zLAoJLS10aHVzIGFsd2F5cyBwaWNrIGZpcnN0IHJhbmRvbSBsYXRlcgotLXJvbGxfYV9tb2QoImRlYXRoc3Bsb2RlIikgLS1waWNrIGEgc3BlY2lmaWMgbW9kCnJvbGxfYV9tb2QoZmFsc2UpIC0tcGljayAzIHJhbmRvbSBtb2RzCnJvbGxfYV9tb2QoZmFsc2UpCnJvbGxfYV9tb2QoZmFsc2UpCgotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gTU9EIEVYRUNVVElPTiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCmlmIE1vZERlZnNbImRvb213b3JsZCJdLmFjdGl2ZSB0aGVuCglleGVfZG9vbXdvcmxkKCkKZW5kCmlmIE1vZERlZnNbInN0b2NrcGlsYWdlIl0uYWN0aXZlIHRoZW4KCWV4ZV9zdG9ja3BpbGFnZSgpCmVuZAppZiBNb2REZWZzWyJlbGltaXQiXS5hY3RpdmUgdGhlbgoJZXhlX2VsaW1pdCgpCmVuZAppZiBNb2REZWZzWyJhbGxzaGllbGQiXS5hY3RpdmUgYW5kIE1vZERlZnNbImhpZ2hsYW5kZXIiXS5hY3RpdmUgdGhlbiAtLXN1cHBvcnQgZm9yIGRpZmZlcmVudCBvcmRlcnMKCWV4ZV9oaWdobGFuZGVyKCkKCWV4ZV9hbGxzaGllbGQoTW9kRGVmc1siYm91bmNld29ybGQiXS5hY3RpdmUpCmVsc2VpZiBNb2REZWZzWyJoaWdobGFuZGVyIl0uYWN0aXZlIHRoZW4KCWV4ZV9oaWdobGFuZGVyKCkKZWxzZWlmIE1vZERlZnNbImFsbHNoaWVsZCJdLmFjdGl2ZSB0aGVuCglleGVfYWxsc2hpZWxkKE1vZERlZnNbImJvdW5jZXdvcmxkIl0uYWN0aXZlKQplbmQKaWYgTW9kRGVmc1siaGlnaHNlYXMiXS5hY3RpdmUgdGhlbgoJZXhlX2hpZ2hzZWFzKCkKZW5kCmlmIE1vZERlZnNbInQyX29ubHkiXS5hY3RpdmUgdGhlbgoJZXhlX3QyX29ubHkoKQplbmQKaWYgTW9kRGVmc1sidDFfb25seSJdLmFjdGl2ZSB0aGVuCglleGVfdDFfb25seSgpCmVuZAppZiBNb2REZWZzWyJidWlsZF9vbmx5Il0uYWN0aXZlIHRoZW4KCWV4ZV9idWlsZF9vbmx5KCkKZW5kCmlmIE1vZERlZnNbImJlYW13b3JsZCJdLmFjdGl2ZSB0aGVuCglleGVfYmVhbXdvcmxkKCkKZW5kCmlmIE1vZERlZnNbInJhaWx3b3JsZCJdLmFjdGl2ZSB0aGVuCglleGVfcmFpbHdvcmxkKCkKZW5kCmlmIE1vZERlZnNbImdtcHdvcmxkIl0uYWN0aXZlIHRoZW4KCWV4ZV9nbXB3b3JsZCgpCmVuZAppZiBNb2REZWZzWyJzcHJheXdvcmxkIl0uYWN0aXZlIHRoZW4KCWV4ZV9zcHJheXdvcmxkKCkKZW5kCmlmIE1vZERlZnNbImVtcHdvcmxkIl0uYWN0aXZlIHRoZW4KCWV4ZV9lbXB3b3JsZCgpCmVuZAppZiBNb2REZWZzWyJjcmF0ZXJhZ2UiXS5hY3RpdmUgdGhlbgoJZXhlX2NyYXRlcmFnZSgpCmVuZAppZiBNb2REZWZzWyJtaW5pbWFzcyJdLmFjdGl2ZSB0aGVuCglleGVfbWluaW1hc3MoTW9kRGVmc1sicmFpbHdvcmxkIl0uYWN0aXZlKQplbmQKaWYgTW9kRGVmc1siYm91bmNld29ybGQiXS5hY3RpdmUgdGhlbgoJZXhlX2JvdW5jZXdvcmxkKE1vZERlZnNbInJhaWx3b3JsZCJdLmFjdGl2ZSkKZW5kCmlmIE1vZERlZnNbImJpZ19ibGluZCJdLmFjdGl2ZSB0aGVuCglleGVfYmlnX2JsaW5kKCkKZW5kCmlmIE1vZERlZnNbInNtb2xfYmxpbmQiXS5hY3RpdmUgdGhlbgoJZXhlX3Ntb2xfYmxpbmQoKQplbmQKaWYgTW9kRGVmc1siaHByZWdlbiJdLmFjdGl2ZSB0aGVuCglleGVfaHByZWdlbigpCmVuZAppZiBNb2REZWZzWyJqdW5rc2NhcGUiXS5hY3RpdmUgdGhlbgoJZXhlX2p1bmtzY2FwZSgpCmVuZAppZiBNb2REZWZzWyJkZWF0aHNwbG9kZSJdLmFjdGl2ZSB0aGVuCglleGVfZGVhdGhzcGxvZGUoKQplbmQKaWYgTW9kRGVmc1sidG95ZmFzdCJdLmFjdGl2ZSB0aGVuCglleGVfdG95ZmFzdCgpCmVuZAppZiBNb2REZWZzWyJhbW1vY29zdCJdLmFjdGl2ZSB0aGVuCglleGVfYW1tb2Nvc3QoTW9kRGVmc1sidG95ZmFzdCJdLmFjdGl2ZSkKZW5kCg

Selected Mod Display:
!bSet tweakdefs5 bG9jYWwgZGVidWdVSUxpc3QgPSB7CglbMV0gPSAibWV0YWxjb3N0IiwKCVsyXSA9ICJlbmVyZ3ljb3N0IiwKCVszXSA9ICJoZWFsdGgiLCAKCVs0XSA9ICJ3b3JrZXJ0aW1lIiwKCVs1XSA9ICJzaWdodGRpc3RhbmNlIiwKCVs2XSA9ICJyYWRhcmRpc3RhbmNlIiwKCVs3XSA9ICJzb25hcmRpc3RhbmNlIiwKCVs4XSA9ICJlbmVyZ3lzdG9yYWdlIiwKCVs5XSA9ICJtZXRhbHN0b3JhZ2UiLAp9CgpVbml0RGVmc1siZGVidWdfdGhpbmdfMSJdID0gdGFibGUuY29weShVbml0RGVmc1siYXJtc2lsbyJdKQpVbml0RGVmc1siZGVidWdfdGhpbmdfMSJdLndlYXBvbnMgPSBuaWwKVW5pdERlZnNbImRlYnVnX3RoaW5nXzEiXS53ZWFwb25kZWZzID0gbmlsClVuaXREZWZzWyJkZWJ1Z190aGluZ18xIl0ubWlud2F0ZXJkZXB0aCA9IDIKVW5pdERlZnNbImRlYnVnX3RoaW5nXzEiXS5tYXh3YXRlcmRlcHRoID0gMQpVbml0RGVmc1siZGVidWdfdGhpbmdfMiJdID0gdGFibGUuY29weShVbml0RGVmc1siZGVidWdfdGhpbmdfMSJdKQpVbml0RGVmc1siZGVidWdfdGhpbmdfMiJdLmJ1aWxkcGljID0gIkNPUlNJTE8uRERTIgpmb3IgaSxuYW1lIGluIHBhaXJzKGRlYnVnVUlMaXN0KSBkbwoJVW5pdERlZnNbImRlYnVnX3RoaW5nXzEiXVtuYW1lXSA9IDY2NiArIGkKCVVuaXREZWZzWyJkZWJ1Z190aGluZ18yIl1bbmFtZV0gPSA2NzUgKyBpIC0tNjY2KyNkZWJ1Z1VJTGlzdAplbmQKCmxvY2FsIGkgPSAwCmZvciBuYW1lLG1kIGluIHBhaXJzKE1vZERlZnMpIGRvCglpZiBtZC5hY3RpdmUgdGhlbgoJCWkgPSBpICsgMQoJCWlmIGkgPCAxMCB0aGVuCgkJCVVuaXREZWZzWyJkZWJ1Z190aGluZ18xIl1bZGVidWdVSUxpc3RbaV1dID0gbWQuaWQKCQllbHNlaWYgaSA8IDE5IHRoZW4KCQkJVW5pdERlZnNbImRlYnVnX3RoaW5nXzIiXVtkZWJ1Z1VJTGlzdFtpLTldXSA9IG1kLmlkCgkJZWxzZQoJCQlicmVhawoJCWVuZAoJZW5kCmVuZAoKaWYgVW5pdERlZnNbImFybWNvbSJdLmJ1aWxkb3B0aW9ucyB0aGVuCQoJdGFibGUuaW5zZXJ0KFVuaXREZWZzWyJhcm1jb20iXS5idWlsZG9wdGlvbnMsICJkZWJ1Z190aGluZ18xIikKCXRhYmxlLmluc2VydChVbml0RGVmc1siYXJtY29tIl0uYnVpbGRvcHRpb25zLCAiZGVidWdfdGhpbmdfMiIpCmVuZAppZiBVbml0RGVmc1siY29yY29tIl0uYnVpbGRvcHRpb25zIHRoZW4JCgl0YWJsZS5pbnNlcnQoVW5pdERlZnNbImNvcmNvbSJdLmJ1aWxkb3B0aW9ucywgImRlYnVnX3RoaW5nXzEiKQoJdGFibGUuaW5zZXJ0KFVuaXREZWZzWyJjb3Jjb20iXS5idWlsZG9wdGlvbnMsICJkZWJ1Z190aGluZ18yIikKZW5kCmlmIFVuaXREZWZzWyJsZWdjb20iXS5idWlsZG9wdGlvbnMgdGhlbgkKCXRhYmxlLmluc2VydChVbml0RGVmc1sibGVnY29tIl0uYnVpbGRvcHRpb25zLCAiZGVidWdfdGhpbmdfMSIpCgl0YWJsZS5pbnNlcnQoVW5pdERlZnNbImxlZ2NvbSJdLmJ1aWxkb3B0aW9ucywgImRlYnVnX3RoaW5nXzIiKQplbmQK

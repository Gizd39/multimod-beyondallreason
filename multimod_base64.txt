mini squashed singletweak version:
!bSet tweakdefs 



!bSet tweakdefs 
!bSet tweakdefs1 
!bSet tweakdefs2 
!bSet tweakdefs3 
!bSet tweakdefs4 CmZ1bmN0aW9uIHBpY2tfd2VpZ2h0ZWRfdmFsdWUocm9sbCkgLS1waWNrcyBtb2QgZnJvbSBsaXN0IGJhc2VkIG9uIHJvbGwKCWZvciBuYW1lLG1kIGluIHBhaXJzKE1vZERlZnMpIGRvCgkJaWYgcm9sbCA-IG1kLndlaWdodCB0aGVuCgkJCXJvbGwgPSByb2xsIC0gbWQud2VpZ2h0CgkJZWxzZQoJCQlyZXR1cm4gbmFtZQoJCWVuZAoJZW5kCglyZXR1cm4gInZhbmlsbGEiCmVuZAoKZnVuY3Rpb24gcm9sbF9hX21vZChyaWdnZWROYW1lKQoJbG9jYWwgcm9sbGVkX21vZCA9ICJ2YW5pbGxhIgoJaWYgbm90IHJpZ2dlZE5hbWUgdGhlbgoJCWxvY2FsIHJuZ193ZWlnaHRfdG90YWwgPSAwCgkJZm9yIG5hbWUsbWQgaW4gcGFpcnMoTW9kRGVmcykgZG8gCgkJCXJuZ193ZWlnaHRfdG90YWwgPSBybmdfd2VpZ2h0X3RvdGFsICsgbWQud2VpZ2h0CgkJZW5kCgkJaWYgcm5nX3dlaWdodF90b3RhbCA-IDAgdGhlbgoJCQlyb2xsZWRfbW9kID0gcGlja193ZWlnaHRlZF92YWx1ZSggbWF0aC5yYW5kb20ocm5nX3dlaWdodF90b3RhbCkgKSAtLXBpY2sgYSBtb2QKCQllbmQKCWVsc2UKCQlyb2xsZWRfbW9kID0gcmlnZ2VkTmFtZQoJZW5kCgkKCWlmIHJvbGxlZF9tb2Qgfj0gInZhbmlsbGEiIHRoZW4KCQlNb2REZWZzW3JvbGxlZF9tb2RdLmFjdGl2ZSA9IHRydWUKCQlNb2REZWZzW3JvbGxlZF9tb2RdLndlaWdodCA9IDAgLS1yZW1vdmUgdGhlIG1vZCBmcm9tIHBvb2wKCQlmb3IgYW5hbWUsYWZmIGluIHBhaXJzKE1vZERlZnNbcm9sbGVkX21vZF0uYWZmaW5pdHkpIGRvIC0tYXBwbHkgYWZmaW5pdGllcwoJCQlNb2REZWZzW2FuYW1lXS53ZWlnaHQgPSBNb2REZWZzW2FuYW1lXS53ZWlnaHQgKiBhZmYKCQllbmQKCWVuZAoJCglyZXR1cm4gcm9sbGVkX21vZAplbmQKCmZvciBtbmFtZSxtZCBpbiBwYWlycyhNb2REZWZzKSBkbwoJbWQuYWN0aXZlID0gZmFsc2UKZW5kCgotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gVEhJTkdET0lORyAtIFVTRVIgUEFSVCAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCgktLXBpY2tpbmcgc3BlY2lmaWMgbW9kcyBpZ25vcmVzIHdlaWdodHMgc28gaXQgY2FuIGZvcmNlICJiYWQiIGNvbWJvcywKCS0tdGh1cyBhbHdheXMgcGljayBmaXJzdCByYW5kb20gbGF0ZXIKLS1yb2xsX2FfbW9kKCJkZWF0aHNwbG9kZSIpIC0tcGljayBhIHNwZWNpZmljIG1vZApyb2xsX2FfbW9kKGZhbHNlKSAtLXBpY2sgMyByYW5kb20gbW9kcwpyb2xsX2FfbW9kKGZhbHNlKQpyb2xsX2FfbW9kKGZhbHNlKQoKLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIE1PRCBFWEVDVVRJT04gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQppZiBNb2REZWZzWyJkb29td29ybGQiXS5hY3RpdmUgdGhlbgoJZXhlX2Rvb213b3JsZCgpCmVuZAppZiBNb2REZWZzWyJzdG9ja3BpbGFnZSJdLmFjdGl2ZSB0aGVuCglleGVfc3RvY2twaWxhZ2UoKQplbmQKaWYgTW9kRGVmc1siZWxpbWl0Il0uYWN0aXZlIHRoZW4KCWV4ZV9lbGltaXQoKQplbmQKaWYgTW9kRGVmc1siYWxsc2hpZWxkIl0uYWN0aXZlIGFuZCBNb2REZWZzWyJoaWdobGFuZGVyIl0uYWN0aXZlIHRoZW4gLS1zdXBwb3J0IGZvciBkaWZmZXJlbnQgb3JkZXJzCglleGVfaGlnaGxhbmRlcigpCglleGVfYWxsc2hpZWxkKE1vZERlZnNbImJvdW5jZXdvcmxkIl0uYWN0aXZlKQplbHNlaWYgTW9kRGVmc1siaGlnaGxhbmRlciJdLmFjdGl2ZSB0aGVuCglleGVfaGlnaGxhbmRlcigpCmVsc2VpZiBNb2REZWZzWyJhbGxzaGllbGQiXS5hY3RpdmUgdGhlbgoJZXhlX2FsbHNoaWVsZChNb2REZWZzWyJib3VuY2V3b3JsZCJdLmFjdGl2ZSkKZW5kCmlmIE1vZERlZnNbImhpZ2hzZWFzIl0uYWN0aXZlIHRoZW4KCWV4ZV9oaWdoc2VhcygpCmVuZAppZiBNb2REZWZzWyJ0Ml9vbmx5Il0uYWN0aXZlIHRoZW4KCWV4ZV90Ml9vbmx5KCkKZW5kCmlmIE1vZERlZnNbInQxX29ubHkiXS5hY3RpdmUgdGhlbgoJZXhlX3QxX29ubHkoKQplbmQKaWYgTW9kRGVmc1siYnVpbGRfb25seSJdLmFjdGl2ZSB0aGVuCglleGVfYnVpbGRfb25seSgpCmVuZAppZiBNb2REZWZzWyJiZWFtd29ybGQiXS5hY3RpdmUgdGhlbgoJZXhlX2JlYW13b3JsZCgpCmVuZAppZiBNb2REZWZzWyJyYWlsd29ybGQiXS5hY3RpdmUgdGhlbgoJZXhlX3JhaWx3b3JsZCgpCmVuZAppZiBNb2REZWZzWyJnbXB3b3JsZCJdLmFjdGl2ZSB0aGVuCglleGVfZ21wd29ybGQoKQplbmQKaWYgTW9kRGVmc1sic3ByYXl3b3JsZCJdLmFjdGl2ZSB0aGVuCglleGVfc3ByYXl3b3JsZCgpCmVuZAppZiBNb2REZWZzWyJlbXB3b3JsZCJdLmFjdGl2ZSB0aGVuCglleGVfZW1wd29ybGQoKQplbmQKaWYgTW9kRGVmc1siY3JhdGVyYWdlIl0uYWN0aXZlIHRoZW4KCWV4ZV9jcmF0ZXJhZ2UoKQplbmQKaWYgTW9kRGVmc1sibWluaW1hc3MiXS5hY3RpdmUgdGhlbgoJZXhlX21pbmltYXNzKE1vZERlZnNbInJhaWx3b3JsZCJdLmFjdGl2ZSkKZW5kCmlmIE1vZERlZnNbImJvdW5jZXdvcmxkIl0uYWN0aXZlIHRoZW4KCWV4ZV9ib3VuY2V3b3JsZChNb2REZWZzWyJyYWlsd29ybGQiXS5hY3RpdmUpCmVuZAppZiBNb2REZWZzWyJiaWdfYmxpbmQiXS5hY3RpdmUgdGhlbgoJZXhlX2JpZ19ibGluZCgpCmVuZAppZiBNb2REZWZzWyJzbW9sX2JsaW5kIl0uYWN0aXZlIHRoZW4KCWV4ZV9zbW9sX2JsaW5kKCkKZW5kCmlmIE1vZERlZnNbImhwcmVnZW4iXS5hY3RpdmUgdGhlbgoJZXhlX2hwcmVnZW4oKQplbmQKaWYgTW9kRGVmc1sianVua3NjYXBlIl0uYWN0aXZlIHRoZW4KCWV4ZV9qdW5rc2NhcGUoKQplbmQKaWYgTW9kRGVmc1siZGVhdGhzcGxvZGUiXS5hY3RpdmUgdGhlbgoJZXhlX2RlYXRoc3Bsb2RlKCkKZW5kCmlmIE1vZERlZnNbInRveWZhc3QiXS5hY3RpdmUgdGhlbgoJZXhlX3RveWZhc3QoKQplbmQKaWYgTW9kRGVmc1siYW1tb2Nvc3QiXS5hY3RpdmUgdGhlbgoJZXhlX2FtbW9jb3N0KE1vZERlZnNbInRveWZhc3QiXS5hY3RpdmUpCmVuZAo

Selected Mod Display UI:
!bSet tweakdefs5 CmxvY2FsIGRlYnVnVUlMaXN0ID0gewoJWzFdID0gIm1ldGFsY29zdCIsCglbMl0gPSAiZW5lcmd5Y29zdCIsCglbM10gPSAiaGVhbHRoIiwgCglbNF0gPSAid29ya2VydGltZSIsCglbNV0gPSAic2lnaHRkaXN0YW5jZSIsCglbNl0gPSAicmFkYXJkaXN0YW5jZSIsCglbN10gPSAic29uYXJkaXN0YW5jZSIsCglbOF0gPSAiZW5lcmd5c3RvcmFnZSIsCglbOV0gPSAibWV0YWxzdG9yYWdlIiwKfQoKVW5pdERlZnNbImRlYnVnX3RoaW5nXzEiXSA9IHRhYmxlLmNvcHkoVW5pdERlZnNbImFybXNpbG8iXSkKVW5pdERlZnNbImRlYnVnX3RoaW5nXzEiXS53ZWFwb25zID0gbmlsClVuaXREZWZzWyJkZWJ1Z190aGluZ18xIl0ud2VhcG9uZGVmcyA9IG5pbApVbml0RGVmc1siZGVidWdfdGhpbmdfMSJdLm1pbndhdGVyZGVwdGggPSAyClVuaXREZWZzWyJkZWJ1Z190aGluZ18xIl0ubWF4d2F0ZXJkZXB0aCA9IDEKVW5pdERlZnNbImRlYnVnX3RoaW5nXzIiXSA9IHRhYmxlLmNvcHkoVW5pdERlZnNbImRlYnVnX3RoaW5nXzEiXSkKVW5pdERlZnNbImRlYnVnX3RoaW5nXzIiXS5idWlsZHBpYyA9ICJDT1JTSUxPLkREUyIKZm9yIGksbmFtZSBpbiBwYWlycyhkZWJ1Z1VJTGlzdCkgZG8KCVVuaXREZWZzWyJkZWJ1Z190aGluZ18xIl1bbmFtZV0gPSA2NjYgKyBpCglVbml0RGVmc1siZGVidWdfdGhpbmdfMiJdW25hbWVdID0gNjc1ICsgaSAtLTY2NisjZGVidWdVSUxpc3QKZW5kCgpsb2NhbCBpID0gMApmb3IgbmFtZSxtZCBpbiBwYWlycyhNb2REZWZzKSBkbwoJaWYgbWQuYWN0aXZlIHRoZW4KCQlpID0gaSArIDEKCQlpZiBpIDwgMTAgdGhlbgoJCQlVbml0RGVmc1siZGVidWdfdGhpbmdfMSJdW2RlYnVnVUlMaXN0W2ldXSA9IG1kLmlkCgkJZWxzZWlmIGkgPCAxOSB0aGVuCgkJCVVuaXREZWZzWyJkZWJ1Z190aGluZ18yIl1bZGVidWdVSUxpc3RbaS05XV0gPSBtZC5pZAoJCWVsc2UKCQkJYnJlYWsKCQllbmQKCWVuZAplbmQKCmlmIFVuaXREZWZzWyJhcm1jb20iXS5idWlsZG9wdGlvbnMgdGhlbgkKCXRhYmxlLmluc2VydChVbml0RGVmc1siYXJtY29tIl0uYnVpbGRvcHRpb25zLCAiZGVidWdfdGhpbmdfMSIpCgl0YWJsZS5pbnNlcnQoVW5pdERlZnNbImFybWNvbSJdLmJ1aWxkb3B0aW9ucywgImRlYnVnX3RoaW5nXzIiKQplbmQKaWYgVW5pdERlZnNbImNvcmNvbSJdLmJ1aWxkb3B0aW9ucyB0aGVuCQoJdGFibGUuaW5zZXJ0KFVuaXREZWZzWyJjb3Jjb20iXS5idWlsZG9wdGlvbnMsICJkZWJ1Z190aGluZ18xIikKCXRhYmxlLmluc2VydChVbml0RGVmc1siY29yY29tIl0uYnVpbGRvcHRpb25zLCAiZGVidWdfdGhpbmdfMiIpCmVuZAppZiBVbml0RGVmc1sibGVnY29tIl0uYnVpbGRvcHRpb25zIHRoZW4JCgl0YWJsZS5pbnNlcnQoVW5pdERlZnNbImxlZ2NvbSJdLmJ1aWxkb3B0aW9ucywgImRlYnVnX3RoaW5nXzEiKQoJdGFibGUuaW5zZXJ0KFVuaXREZWZzWyJsZWdjb20iXS5idWlsZG9wdGlvbnMsICJkZWJ1Z190aGluZ18yIikKZW5k
